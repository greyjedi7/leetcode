#include<bits/stdc++.h>
using namespace std;


// void swap(int* a, int* b){
//     int temp = *a;
//     *a = *b;
//     *b = temp;
// }

// void heapify(vector<int>& piles){
//     for(int i=0;i<piles.size();i++){

//         int largest = piles[i];
//         int leftChild = (2*i+1 < piles.size()) ? 2*i+1 : -1;
//         int rightChild = (2*i+2 < piles.size()) ? 2*i+2 : -1;

//         if(leftChild != -1 && rightChild != -1){
//             if(piles[i] < piles[leftChild] || piles[i] < piles[rightChild]){
//                 if(piles[leftChild] >= piles[i] && piles[leftChild] >= piles[rightChild]){
//                     swap(&piles[leftChild],&piles[i]);
//                 } else{
//                     swap(&piles[rightChild],&piles[i]);
//                 }
//             }
//         } else if(leftChild != -1 && rightChild == -1){
//             if(piles[i] < piles[leftChild]){
//                 swap(&piles[leftChild], &piles[i]);
//             }
//         }

//         // if(piles[i] < piles[2*i+1] || piles[i] < piles[2*i+2]){
//         //     if(piles[2*i+1] >= piles[i] && piles[2*i+1] >= piles[2*i+2]){
//         //         swap(&piles[2*i+1],&piles[i]);
//         //     } else{
//         //         swap(&piles[2*i+2],&piles[i]);
//         //     }
//         // }
//     }
// }

// void print(vector<int> piles){
//     for(int i=0;i<piles.size();i++){
//         cout<<piles[i]<<" ";
//     }
//     cout<<endl;
// }

// int minStoneSum(vector<int>& piles, int k){
//     sort(piles.begin(),piles.end(), greater<int>());
//     print(piles);
//     for(int i=0;i<k;i++){
//         piles[0] = piles[0] - floor(piles[0]/2);
//         print(piles);
//         heapify(piles);
//     }

//     int sum = 0;
//     for(int i=0;i<piles.size();i++) sum += piles[i];
//     return sum;
// }


int minStoneSum(vector<int>& piles, int k){
    priority_queue<int> queue;
    for(int i=0;i<piles.size();i++){
        queue.push(piles[i]);
    }

    for(int i=0;i<k;i++){
        int top = queue.top();
        queue.pop();
        queue.push(top - floor(top/2));
    }

    int sum = 0;
    while(!queue.empty()){
        sum += queue.top();
        queue.pop();
    }

    return sum;
}

int main(){

    vector<int> piles {};

    cout<<minStoneSum(piles,9309)<<endl;

    return 0;
}